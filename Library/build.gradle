def getVersionName = { ->
    def os = System.getProperty("os.name").toLowerCase()
    def revision = new ByteArrayOutputStream()
    def lastCommit = new ByteArrayOutputStream()

    if (os.contains("mac")) {
        def commit = new String()
        commit = ['sh', '-c', 'git log --pretty=format:"%h" -1'].execute().text.trim()
        revision = ['sh', '-c', 'git rev-list ' + commit + ' | wc -l | tr -d " "'].execute().text
    } else if (!os.contains("windows")) {
        exec {
            executable "/bin/sh"
            args "-c", "echo -n `git log --pretty=format:\"%h\" -1`"
            standardOutput = lastCommit;
        }

        exec {
            executable "/bin/sh"
            args "-c", "echo -n `git rev-list " + lastCommit + " | wc -l | sed 's/^[ ^t]*//'`"
            standardOutput = revision;
        }
    } else {
        exec {
            executable "cmd"
            args "/c", "git log --pretty=format:\"%h\" -1"
            standardOutput = lastCommit;
        }
        lastCommit = lastCommit as String
        lastCommit = lastCommit.trim()

        exec {
            executable "cmd"
            args "/c", "git rev-list " + lastCommit + " | find /c /v \"\""
            standardOutput = revision;
        }
    }
    revision = revision as String
    revision = revision.trim()
    return revision
}

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.2'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }
}

ext {
    developers = [
            developer = [
                    id   : "RegFacu",
                    name : "Facundo Mengoni",
                    email: "facundo.mengoni@globallogic.com"
            ]
    ]
    androidVersionName = '0.3.8.' + getVersionName()
}